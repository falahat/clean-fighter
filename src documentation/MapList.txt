/**
 * ...
 * @author Kevin
 */

 /** Data Structure that represents a list using a map, where the current size (which increments) of the map serves as the index of each item added to the MapList.*/
class MapList<ValueType>
{
    /** */
	public function new()
	{
	}

    /** Returns the size of this MapList.*/
	public function size():Int
	{
	}

    /** Returns the item stored at the INDEX position.*/
	public function getItemAt(index:Int):ValueType
	{
	}

    /** Adds ITEM to the MapList with the current _size as its index, increments _size if the item is added.*/
	public function add(item:ValueType):Void
	{
	}

    /** Returns true if there is an item at INDEX, decreases the size of the list, and removes that item from the list. Otherwise returns false.*/
	public function removeItemAt(index:Int):Bool
	{
	}

    /** Removes the item in the list that was added last.*/
	public function removeLastItem():Bool
	{
	}

    /** Removes the very first item in the list.*/
	public function removeFirstItem():Bool
	{
	}
}